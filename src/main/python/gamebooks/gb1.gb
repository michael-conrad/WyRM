Title: Slash'n Up! Book 0.5
Subtitle: Dungeons of the Forsaken Abbey
Author: Michael Conrad
License: CC-BY-SA
Note: A "Hack'n" Slash Game Book
Attribution: Gabriel P (urudnd@gmail.com)

Library: character_sheet
Library: equipment
Library: mana
Library: skills
Library: talents
Library: gb_utils
Library: npcs
Library: pcs
Library: room_descriptions
Library: mob_combat

postexec: postexec
preexec: preexec

[Start]

"""
Welcome New Adventurer!

I hope you enjoy this experiment in static interactive fiction ebook creation.

This ebook is not meant to be read by hitting the "next page" button over and over.
Instead, at the end of each section, you will be presented with one or more choices.
You need to tap or otherwise select a choice to have the story continue.
Your choices determine the story you read.

Please select one of the following options to continue.

"""

direction "About this book" "About" facing "w";
direction "Show your support" "Show Your Support" facing "w";
direction "Start reading" "Start the Game" facing "w";

world darkvision;
darkvision = 0;

world torch;
torch = 0;

world is_dark;
is_dark = false;

world player;
player = PCs.player_forsaken_alley();

world know_of_tunnel;
know_of_tunnel = false;

world is_outside;
is_outside = true;

world is_complete_5;
world is_complete_5a;
world is_complete_4;
world is_complete_4a;
world is_complete_2;
world is_complete_3;
world is_complete;

macro stats {
    if (player.stats_changed) {
        player.stats_brief;
    }
}

macro torch {
    is_dark = !is_outside && darkvision-turn() < 0 && torch-turn() < 0;
    if (is_dark && player.has_item("torch")) {
        if (torch) {
            "You torch sputters and dies. You quickly light another torch."
        } else {
            "You light a torch."
        }
        is_dark = false;
        player.discard("torch");
        torch = turn() + 60;
        torch_count = player.item_count("torch");
        if (torch_count==0) {
            "You have no more torches remaining."
        } else if (torch_count==1) {
            "You have 1 torch remaining."
        } else {
            "You have {torch_count} torches remaining."
        }
    }
}

macro fight_and_loot {
    if (items.mobs) {
        mob_unit = MobUnit();
        mob_unit.add_units(items.mobs);
        mob_unit.combat(player);
        if (player.is_alive) {
            if (mob_unit.is_alive) {
                "Intervention of Fate"
            }
            if (!mob_unit.is_alive) {
               mob_loot = mob_unit.loot;
               if (mob_loot) {
                    "You loot the corpses."
                    for (item: mob_loot) {
                        "* {item.name}";
                        player.add_item(item);
                    }
                }
            }
        }
    }
}

macro wander {
    if (!is_outside) {
        if (!items.mobs) {
            wander_cnt = int(turn()/100) + 1;
            if (1@6==1) {
                wander_monsters(wander_cnt);
            }
        }
    }
}

macro is_complete {
    is_complete = is_complete_5 && is_complete_4 && is_complete_2 && is_complete_3;
}

macro preexec {
    macro is_complete;
    macro torch;
    macro wander;
}

macro postexec {
    macro fight_and_loot;
    if (is_dark) {
        "Your torch sputters and dies. Everything goes dark."
        torch = 0;
        cnt = 1;
        while (player.is_alive) {
            repeat cnt NPC.shadow();
            m.add_units(items.mobs);
            m.combat(player);
            cnt += 1;
        }
    }
    macro stats;
    if (!player.is_alive) {
        clear options;
        "You have perished."
        start over;
    }
}

[About]


"""
This is a Warrior, Rogue, Mage with some D&D 5e rules mixed in gamebook.

You are playing the one page dungeon quest:

    "Dungeons of the Forsaken Abbey"
    By Gabriel P. (urudnd@gmail.com)
    Copyright 2010, CC-BY-SA

The original one page dungeon is from "One Page Dungeon Compendium", 2010 Edition.

"""

_ = player.stats_changed; // to prevent stats have changed display in postexec macro

direction "Show your support" "Show Your Support" facing "w";
direction "Start the game" "Start the Game" facing "w";

[Show Your Support]

"""
Don't forget to leave a five star review with comments.

Adding a brief description of your adventure to the review would be appreciated.

My husband is also a writer, so please look for "Forgiving Judas" by Spencer Conrad.
"""

direction "About this book" "About" facing "w";
direction "Start the game" "Start the Game" facing "w";

[Start the Game]

world is_dark;
is_dark = false;
is_outside = true;

item = Weapon("Handaxe");
item.damage = "1d6x";
item.cost = 5;
item.cost_unit = "GP";
player.equip_weapon(item);
player.equip_armor(Armor.by_name("Leather"));

"""
You've come to explore the ruins of an abbey whose name has been forgotten.
There are tales of an all black clad warrior-mage with divinely blessed weapons,
armor, and other gear, who went in and never returned. It is whispered that the
armor, weapons, and other gear await any brave enough and strong enough to go
find it. You've decided you're that someone.

# Your Starting Stats

* Warrior: {player.warrior} - Determines proficiency with strength and fighting related skills.
* Rogue: {player.rogue} - Determines proficiency with agility and stealth related skills.
* Mage: {player.mage} - Determines proficiency with mana and mental related skills.

## Pools

* Fate: {player.fate} - Divine intervention used to avoid combat death or other fatal circumstances. Use is automatic. Does not refill.
* Armor_Penalty: {player.armor_penalty} - Penalty against mana pool based on armor worn.
* Hit Points: {player.hp} - Life points. When it falls to < Â½ skill penalties are assessed. If it falls to 0 death occurs.
* Mana: {player.mana} ({player.mage}*2 base - {player.armor_penalty} armor penalty) - Used by spell casting. Only refills during sleep or meditation.
* Defense: 7 - Proficiency enemies need to achieve to damage you.

## Skills

* Acrobatics (Rogue) Training in activities like dancing, contortion, climbing, tightrope walking, tumbling.
* Axes (Warrior) Training with axes and polearms
* Daggers (Rogue) Training with daggers and knives.

## Talents

* Massive Attack: You automatically add your Warrior level to your melee attack damage once per combat sequence.
"""

"## Spells"

player.spell_list;

"## Equipment"

player.add_item("Flint and tinder");
player.add_item("Water flask");
player.add_item("Blanket");
player.add_item("Bedroll");
player.add_item("Small tent");
player.add_item("Backpack");
repeat 7 player.add_item("Iron Ration");
player.add_item("Pickaxe");
repeat 7 player.add_item("Standard Ration");
player.add_item("Rope, 30 ft");
player.add_item("Spellbook");
repeat 3 player.add_item("Torch");

player.list_gear;

"## Money"

player.add_items(Money.money_changer(Money().as_kind("s").at_qty(166)));
player.list_money;

"## Armor and Weapon Ensemble"

player.list_armor + player.list_weapons;

"""
Near this town there is a hill where stand the ruins of what was once an abbey.
Legend has it that
long ago the studious monks became corrupted by some evil and were destroyed by
a band of wizards.

As a new adventurer you have come seeking loot. Hopefully stuff that will help
with future adventures.
"""

player.save_inv_list();

_ = player.stats_changed; // to prevent stats have changed display in postexec macro

goto "town" facing "w";

[5]

is_outside = false;

room looted;
room alcove;

once {
    looted = false;
    alcove = false;
    """
    You come to a portcullis. Beyond you see a 90ft x 40ft room with
    alcoves in the walls. You can't see into the alcoves from here.
    You push the portcullis open with the sound of rusted screeching metal
    and step into the room to get a better view. The alcoves
    are filled with the skeletons and corpses of monks, except one
    in the {facing.e} wall.
    """
} else {
    "You are in the crypt. The portcullis is {facing.s}. The empty alcove is to the {facing.e}."
}

if (!alcove) {
    option "Examine empty alcove" {
        alcove = true;
        "You discover a cleverly disguised door."
        facing.face("e");
    }
} else if (is_complete_5a) {
    "Nothing else of interest remains in the room with the cross and empty chest."
} else {
    direction "Go through door in alcove to your {facing.e}." "5a" facing "e";
}

if (!looted) {
    option "Loot alcoves" {
        looted = true;
        """
        You reach into the first alcove to see what treasures you might find.
        Suddenly you hear moaning and clacking from all around. You are under attack!
        """
        NPC.spawn(NPC.skeleton_warrior2, 1@4);
        NPC.spawn(NPC.zombie2, 1@3);
        facing.face("e");
    }
}

if (facing.behind != "s" || is_complete_5a) {
    direction "Exit the crypt using the portcullis to your {facing.s}." "4way" facing "s";
}

if (is_complete_5a && looted) {
    is_complete_5 = true;
}

[5a]

is_outside = false;
room examined_chest;
room examined_monk;

once {
    """
    You step into in a 40ft x 30ft room.
    All the walls are covered with depictions of evil and bloody looking acts. On the far
    wall you see a mummified corpse that is tied with barbed wire to a wooden X.
    A small open chest is to your {facing.e}. In the far corner of the room.
    """

} else {
    """
    You are in a 30ft x 40ft room with a long dead monk on an X cross. The entrance is to your {facing.w}.
    """
}

if (!examined_chest) {
    option "Examine chest" {
        examined_chest = true;
        "You walk over and peer into the chest."
        "You discover:"
        in_chest = get_loot();
        for (l: in_chest) {
            player.add_item(l);
            "* {l.name}"
        }
        "You quickly stash all the coins."
        facing.face("w");
    }
}

if (!examined_monk) {
    option "Examine monk" {
        examined_monk = true;
        "You walk over and search the corpse, but find nothing of interest."
        facing.face("w");
    }
}

is_complete_5a = examined_chest && examined_monk;

if (is_complete_5a) direction "{facing.dw}" "5" facing "w";

[4way]
is_outside = false;

"is_complete_5 {is_complete_5}"
"is_complete_4 {is_complete_4}"
"is_complete_3 {is_complete_3}"
"is_complete_2 {is_complete_2}"

once {
    """
    You are at a four way intersection.
    You came in from the passage to your {facing.e}.
    The passages {facing.n}, {facing.s}, and {facing.w} disappear into darkness.
    """
} else {
    "You are at a four way intersection. The passage to your {facing.e} leads to the ruins above."
}

if (is_complete_5) {
    "The crypt to your {facing.n} contains nothing else of interest."
} else {
    direction "{facing.dn}" "5" facing "n";
}

if (is_complete_4) {
    "The cave with pond to your {facing.w} contains nothing else of interest."
} else {
    direction "{facing.dw}" "4" facing "w";
}

if (is_complete_3 && is_complete_2) {
    "Nothing else of interest lies to your {facing.s}."
} else {
    direction "{facing.ds}" "3 Way" facing "s";
}

if (!facing.is_behind("e")) {
    direction "Head back to the surface using the passage to your {facing.e}." "1" facing "e";
}

if (is_complete) {
    "Nothing else of interest remains in the complex."
    direction "Continue." "1" facing "e";
}

[1]
is_outside = false;

"""
A flight of stairs leads up to the {facing.n}. A long passageway is to your {facing.w}.
"""

if (facing.behind != "n") option "Climb up stairs" {
    """
    You climb up two flights of stairs, turn left, climb up one more flight of stairs, and come
    out into the ruins of the Abbey.
    """
    goto "ruins" facing "w";
}

if (facing.behind != "w") direction "Follow passageway" "4way" facing "w";

if (is_complete) {
    clear options;
    direction "Climb up stairs" "ruins" facing "w";
}

[ruins]
is_outside = true;

"## Abbey Ruins"

once {
"""
You walk up the hill to the ruins.

Digging through the rumble you happen upon a flight of stairs leading down
underground to your {facing.e}.
"""
} else {
"You see the rubble of destroyed buildings all about. Stairs leading down are to your {facing.e}."
}

"""
Rubble and collapsed buildings are all about. You see a flight of stairs heading down to your {facing.e}
"""

if (facing.behind != "n") direction "Return to town" "town" facing "n";
if (player.has_item("torch")) {
    option "Climb down stairs" {
        is_outside = false;
        macro torch;
        """
        You climb down a flight of stairs, come to a landing, then turning right going down an additional
        two flights of stairs
        """
        goto "1" facing "s";
    }
} else {
    option "Climb down stairs" {
        "It's too dark to go down the stairs and you don't have any torches."
    }
}

if (is_complete) {
    clear options;
    direction "Return to town" "town" facing "n";
}



[town]
is_outside = true;

"""
You are in the main town square.

You see an alchemy shop to your {facing.n}.
There is a weapons and armory shop to your {facing.w}.
The inn where you have a room is to the the {facing.e}.
To the {facing.s} is the road leading out of town which goes by the ruins of the abbey.
Behind is {facing.behind}.
"""

// direction "Retire to the inn [end the game]" "end-game" facing "e";

if (facing.behind != "n" && player.money.gp>=25) option "Visit alchemy shop" {
    "You walk into the local alchemy shop."
    goto "potion-shop" facing "n";
}

if (facing.behind != "w") option "Go weapon and armor shopping" {
    "You walk into the local armory."
    goto "armory-shop" facing "w";
}

if (facing.behind != "w" && !player.has_item("torch")) option "Go to the supplies store" {
    "You walk into the supplies store."
    goto "armory-shop" facing "w";
}

if (facing.behind != "s") direction "Head down road and go to the abbey" "ruins-fork" facing "e";

if (is_complete) {
    """
    You have searched through all the ruins of the abbey and gained all the loot that was findable.

    You decide to retire to the inn and take stock of what all you have gained.
    """
    clear options;
    direction "Continue" "end-game" facing "e";
}


[ruins-fork]
is_outside = true;
world know_of_tunnel;
goto "ruins" facing "e";

[potion-shop]
is_outside = true;
room swiftness_in_stock;
room mana_renew_in_stock;
room darkvision_in_stock;
room health_in_stock;
room option_ctr; //used to prevent option block from short-circuiting into a single block for no sale.
option_ctr = 0;
once {
    swiftness_in_stock = 1@4;
    mana_renew_in_stock = 1@4;
    darkvision_in_stock = 1@4;
    health_in_stock = 1@4;
} else {
    if (!swiftness_in_stock && 1@6 == 1) swiftness_in_stock = 1@8;
    if (!mana_renew_in_stock && 1@6 == 1) mana_renew_in_stock = 1@8;
    if (!darkvision_in_stock && 1@6 == 1) darkvision_in_stock = 1@8;
    if (!health_in_stock && 1@6 == 1) health_in_stock = 1@8;
}

potions = list();
if (swiftness_in_stock) {
    potion = Item("Potion of Speed");
    potion.description = "Defense bonus +1d3.";
    potion.cost=50;
    potion.cost_unit="gp";
    potions.append(potion);
}
if (mana_renew_in_stock) {
    potion = Item("Potion of Mana");
    potion.description = "Gradually restores mana over time. Lasts 3d4 turns.";
    potion.cost=25;
    potion.cost_unit="gp";
    potions.append(potion);
}
if (darkvision_in_stock) {
    potion = Item("Potion of Darkvision");
    potion.description = "Grants ability to see in the darkness. Lasts 3d4 rounds.";
    potion.cost=50;
    potion.cost_unit="gp";
    potions.append(potion);
}
if (health_in_stock) {
    potion = Item("Potion of Healing");
    potion.description = "Heals 2d4+2.";
    potion.cost=25;
    potion.cost_unit="gp";
    potions.append(potion);
}
if (potions) {
    "The following potions are in stock:"
    for_sale = "";
    for (potion: potions) {
        for_sale += "* {potion.description}\n";
        m = Money();
        m.qty = potion.cost;
        m.kind = potion.cost_unit;
        if (player.money.cp < m.cp) {
            option "Purchase one {potion.name} for {potion.cost} {potion.cost_unit}." {
                option_ctr += 1;
                "You don't have {potion.cost} {potion.cost_unit} to purchase a {potion.name}."
            }
        } else {
            option "Purchase one {potion.name} for {potion.cost} {potion.cost_unit}." {
                option_ctr += 1;
                "You hand over {m.name} and receive back one {potion.name}."
                player.spend_money(m);
                player.add_item(potion);
            }
        }
    }
    for_sale;
} else {
    "A sign says: No potions are in stock."
}

if (player.money.cp) {
    "Your available funds:"
    player.list_money;
}

direction "Exit the shop" "town" facing "s";

[armory-shop]
is_outside = true;
"You see various weapons and armors on display."

weapons = list();
refund = int(player.weapon.cost / 2);
p_max = player.weapon.damage_max;
"player damage max: {p_max}"
if (p_max < maxof 1@6) {
    item = Weapon("Handaxe");
    item.damage = "1d6x";
    item.cost = 5;
    item.cost_unit = "GP";
    if (player.money.gp >= item.cost - refund) weapons.append(item);
}
if (p_max < maxof 1@10) {
    item = Weapon("Battleaxe");
    item.damage = "1d8x";
    item.damage2 = "1d10x";
    item.cost = 10;
    item.cost_unit = "GP";
    if (player.money.gp >= item.cost - refund) weapons.append(item);
}
if (p_max < maxof 1@12) {
    item = Weapon("Greataxe");
    item.damage = "1d12x";
    item.two_handed = true;
    item.cost = 30;
    item.cost_unit = "GP";
    if (player.money.gp >= item.cost - refund) weapons.append(item);
}
if (p_max < maxof 1@10) {
    item = Weapon("Halberd");
    item.damage = "1d10x";
    item.two_handed = true;
    item.cost = 20;
    item.cost_unit = "GP";
    if (player.money.gp >= item.cost - refund) weapons.append(item);
}

"Your current armor and weapon ensemble:"

player.list_armor + player.list_weapons;

if (player.weapon.is_cursed) {
    "None of the axes or halberds on display seem better than your current item. Which you decide you will never part with."
} else if (len(weapons)) {
   "The following weapons within your budget suit your fighting style:"
    for_sale="";
    for (item: weapons) {
        cost = item.cost-refund;
        cost = max(cost, 0);
        for_sale += "* {item.name}. Cost with trade-in: {cost} {item.cost_unit}.\n";
        option "Purchase a new {item.name}." {
            player.discard(player.weapon.name);
            player.equip_weapon(item);
            "You purchased a {player.weapon.name} for {cost} {item.cost_unit}."
            m = Money();
            m.qty=cost;
            m.kind=item.cost_unit;
            player.spend_money(m);
        }
    }
    for_sale;
} else {
    "None of weapons the shop has in stock seem useful."
}

armors = list();
refund = int(player.armor.cost / 2);
if (player.armor_class < 1) {
    item = Armor("Padded Cloth");
    item.defense = 1;
    item.armor_penalty = 0;
    item.cost = 5;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}
if (player.armor_class < 2) {
    item = Armor("Leather Armor");
    item.defense = 2;
    item.armor_penalty = 1;
    item.cost = 10;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}
if (player.armor_class < 3) {
    item = Armor("Scale Mail Armor");
    item.defense = 3;
    item.armor_penalty = 2;
    item.cost = 50;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}
if (player.armor_class < 5) {
    item = Armor("Chain Mail Armor");
    item.defense = 5;
    item.armor_penalty = 4;
    item.cost = 75;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}
if (player.armor_class < 6) {
    item = Armor("Splint Mail Armor");
    item.defense = 6;
    item.armor_penalty = 5;
    item.cost = 200;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}
if (player.armor_class < 7) {
    item = Armor("Plate Mail Armor");
    item.defense = 7;
    item.armor_penalty = 5;
    item.cost = 200;
    if (player.money.gp >= item.cost - refund) armors.append(item);
}

if (player.armor.is_cursed) {
    "None of the armor appears better than the excellent gear you have. Which you decide you will never part with."
} else if (len(armors)) {
   "The following armor within your budget appears more protective than what you have now:"
    refund = int(player.armor.cost / 2);
    local idx;
    for_sale="";
    for (item: armors) {
        cost = item.cost-refund;
        cost = max(cost, 0);
        for_sale += "* {item.name}. Cost with trade-in: {cost} {item.cost_unit}.\n";
        option "Purchase a new {item.name}." {
            player.discard(player.armor.name);
            player.equip_armor(item);
            "You purchased a {player.armor.name} for {cost} {item.cost_unit}."
            m = Money();
            m.qty=cost;
            m.kind=item.cost_unit;
            player.spend_money(m);
        }
    }
    for_sale;
} else {
    "There is no armor better than what you have that you can afford."
}

direction "Exit the armory" "town" facing "e";

if (player.money.cp) {
    "Your available funds:"
    player.list_money;
}

[end-game]
is_outside = true;

"## END GAME"

"### Found Items:"

player.found_items;

"### Equipped weapons and armor:"

player.list_weapons;
player.list_armor;

if (player.money.cp) {
    "### Your available funds:"
    player.list_money;
}

start over;

[2]

is_outside = false;
is_complete_2 = true;

once {
    """
    You follow the passage for 50ft and come to a cave with a tiled floor. You see a stone plinth on the far
    side holding a two handed war axe. Even from this distance you can tell that it is a finely crafted
    weapon. Next to the plinth on the floor you see the remains of a monk with several arrows in its back.
    looks like the monk was trying to reach the axe before being struck down."""

    "As you look beyond the dead monk you see figures moving into the torchlight."

    Weapon.by_name("Axe (Dark Enchanted)");
    repeat 1@3 NPC.skeleton_warrior();
    repeat 1@4 NPC.zombie();
} else {
    "You are in a tiled floor cave with a stone plinth."
}

direction "{facing.dw}" "3 Way" facing "w";

[3 Way]

is_outside = false;

once {
    """
    You are at a three way intersection with openings {facing.n}, {facing.e}, and {facing.s}.
    The passageway {facing.e} disappears into darkness.
    The passageway {facing.n} disappears into darkness.
    The passageway {facing.s} goes for 10ft past the intersection and ends at
    a set of stairs heading down.
    """
} else {
    """
    You see passageways {facing.e}, {facing.n}, and {facing.s}."
    The passage {facing.s} ends after 10ft at a flight of stairs heading down.
    """
}

if (facing.behind != "n") direction "{facing.dn}" "4way" facing "n";
if (!is_complete_2 && facing.behind != "e") direction "{facing.de}" "2" facing "e";
if (!is_complete_3 && facing.behind != "s") direction "{facing.ds}" "3" facing "s";

[3]

is_outside = false;
is_complete_3 = true;

once {
    """
    You enter a 90ft x 40ft room full of wine and ale casks. Many are open. You don't see any other doors or
    passages leading from the room.
    """
} else {
    "You enter the room full of empty and broken casks. There are stairs leading up to your {facing.n}."
}

direction "Climb up the stairs" "3 Way" facing "n";

[4]

room examine_pond;

is_outside = false;

if (is_complete_4a && examine_pond) {
    is_complete_4 = true;
}

if (facing.facing == "w") {
    "You go down a 60ft passageway and step out into a large cave. The cave is about 100 ft x 70 ft."
}

once {
    """
    Water oozes down the walls of this natural cave and forms a 30ft diameter pond
    in the middle of it. You notice water dripping from the cave roof about 30ft
    above. From the pond a rivulet of water heads into the crack which appears large
    enough to walk into. The pond is covered in what appears to be a dark green
    scummy algae.
    """
} else {
    """
    You are in the cave with a pond in the middle.
    There is a large crack in the wall {facing.s}.
    The cave entrance is {facing.e}.
    """
}

if (!examine_pond) option "Examine pond" {
    "You examine the pond and are suddenly turned around in a different direction!"
    examine_pond = true;
}

if (!is_complete_4a) {
    direction "Examine crack" "4a" facing "s";
}

if (is_complete_4a && is_complete_4) {
    clear options;
}
direction "Head back to the 4 way to your {facing.e}" "4way" facing "e";

[4a]
is_outside = false;
is_complete_4a = true;

if (facing.facing=="s") {
    "You are in an upward sloping tunnel."
    direction "Continue upwards" "4b" facing "s";
}

if (facing.facing=="n") {
    "You are in a downward sloping tunnel."
    direction "Continue downwards" "4" facing "n";
}

[4b]
is_outside = true;
once {
    know_of_tunnel = true;
    """
    You step out and find yourself on the hillside with the ruins of the abbey a short ways above.
    You have discovered another way in and out of the complex.
    """
} else {
    """
    You are on the hillside with the ruins of the abbey a short ways above.
    """
}

if (!is_complete) {
    direction "Go back into the tunnel" "4a" facing "n";
    direction "Climb hill back up to the ruins" "ruins" facing "e";
}
direction "Return to town" "town" facing "n";

